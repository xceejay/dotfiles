         # print "$@" to stdin on receiving SIGWINCH
         # use exec as we will only kill direct childs on exiting,
         # also the additional bash process isn't needed
         </dev/tty \
             exec perl -e '
                 require "sys/ioctl.ph";
                 while (1) {
                     local $SIG{WINCH} = sub {
                         ioctl(STDIN, &TIOCSTI, $_) for split "", join " ", @ARGV;
                    };
                    sleep;
                }' \
                "${@}" &
    }
    if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
        trap finalise EXIT
        parse_options "${@}"
        # print the redraw key twice as there's a run condition we can't circumvent
        # (we can't know the time fzf finished redrawing it's layout)
        print_on_winch "${REDRAW_KEY}${REDRAW_KEY}"
        start_ueberzug
        export -f draw_preview calculate_position
        SHELL="${BASH_BINARY}" \
            fzf --preview "draw_preview {}" \
                --preview-window "${DEFAULT_PREVIEW_POSITION}" \
                --bind "${REDRAW_KEY}:${REDRAW_COMMAND}" \
                "${@}"
    fi`
    `
    readonly BASH_BINARY="$(which bash)"
    readonly REDRAW_COMMAND="toggle-preview+toggle-preview"
    readonly REDRAW_KEY="Âµ"
    declare -r -x DEFAULT_PREVIEW_POSITION="right"
    declare -r -x UEBERZUG_FIFO="$(mktemp --dry-run --suffix "fzf-$$-ueberzug")"
    declare -r -x PREVIEW_ID="preview"
    function is_option_key [[ "${@}" =~ ^(\-.*|\+.*) ]]
    function is_key_value [[ "${@}" == *=* ]]
    function map_options {
        local -n options="${1}"
        local -n options_map="${2}"
        for ((i=0; i < ${#options[@]}; i++)); do
            local key="${options[$i]}" next_key="${options[$((i + 1))]:---}"
            local value=true
            is_option_key "${key}" || \
                continue
            if is_key_value "${key}"; then
                <<<"${key}" \
                    IFS='=' read key value
            elif ! is_option_key "${next_key}"; then
                value="${next_key}"
            fi
            options_map["${key}"]="${value}"
        done
    }
    function parse_options {
        declare -g -a script_options=("${@}")
        declare -g -A mapped_options
        map_options script_options mapped_options
        declare -g -r -x PREVIEW_POSITION="${mapped_options[--preview-window]%%:[^:]*}"
    }
    function start_ueberzug {
        mkfifo "${UEBERZUG_FIFO}"
        <"${UEBERZUG_FIFO}" \
            ueberzug layer --parser bash --silent &
        # prevent EOF
        3>"${UEBERZUG_FIFO}" \
            exec
    }
    function finalise {
        3>&- \
            exec
        &>/dev/null \
            rm "${UEBERZUG_FIFO}"
        &>/dev/null \
            kill $(jobs -p)
    }
    function calculate_position {
        # TODO costs: creating processes > reading files
        #      so.. maybe we should store the terminal size in a temporary file
        #      on receiving SIGWINCH
        #      (in this case we will also need to use perl or something else
        #      as bash won't execute traps if a command is running)
        < <(</dev/tty stty size) \
            read TERMINAL_LINES TERMINAL_COLUMNS
        case "${PREVIEW_POSITION:-${DEFAULT_PREVIEW_POSITION}}" in
            left|up|top)
                X=1
                Y=1
                ;;
            right)
                X=$((TERMINAL_COLUMNS - COLUMNS - 2))
                Y=1
                ;;
            down|bottom)
                X=1
                Y=$((TERMINAL_LINES - LINES - 1))
                ;;
        esac
    }
   function draw_preview {
       calculate_position
       >"${UEBERZUG_FIFO}" declare -A -p cmd=( \
           [action]=add [identifier]="${PREVIEW_ID}" \
           [x]="${X}" [y]="${Y}" \
           [width]="${COLUMNS}" [height]="${LINES}" \
           [scaler]=forced_cover [scaling_position_x]=0.[scaling_position_y]=0.\
           [path]="${@}")
           # add [synchronously_draw]=True if you want to see each change
   }
   function print_on_winch {
       # print "$@" to stdin on receiving SIGWINCH
       # use exec as we will only kill direct childs on exiting,
       # also the additional bash process isn't needed
       </dev/tty \
           exec perl -e '
               require "sys/ioctl.ph";
               while (1) {
                   local $SIG{WINCH} = sub {
                       ioctl(STDIN, &TIOCSTI, $_) for split "", join " ", @ARGV;
                   };
                   sleep;
               }' \
               "${@}" &
   }
   if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
       trap finalise EXIT
       parse_options "${@}"
       # print the redraw key twice as there's a run condition we can't circumvent
       # (we can't know the time fzf finished redrawing it's layout)
       print_on_winch "${REDRAW_KEY}${REDRAW_KEY}"
       start_ueberzug
       export -f draw_preview calculate_position
       SHELL="${BASH_BINARY}" \
           fzf --preview "draw_preview {}" \
               --preview-window "${DEFAULT_PREVIEW_POSITION}" \
               --bind "${REDRAW_KEY}:${REDRAW_COMMAND}" \
               "${@}"
   fi`
   touch nice 
   vim nice
   mx nice
   ./nice 
   vifm
   sudo apt install vifm 
   mv nice 
   mv nice ~/scripts/
   ls
   cd scripts/
   ls
   vim nice 
   mv nice img
   img
   vim test
   mx test 
   ./test 
   google.com
   ./test 
   rm test 
   imgs
   img
   vim
   vvy
   vvu
   vim
   sudo bas
   sudo bash
   rman
   vim
   curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
   vim
   cd .vim/autoload/
   ;s
   ls
   cat plug.vim 
   vim
   neovim
   sudo apt install neovim
   neovim
   vim
   rman 
   man neovim
   sudo apt install py4
   sudo apt install py3
   sudo apt search py3
   sudo apt install py3c-dev 
   vim
   pipinstall --user neovim
   sudo apt --purge neovim
   sudo apt remove--purge neovim
   sudo apt remove --purge neovim
   pipinstall --user neovim
   pyenv install 3.4.4
   sudo apt install pyenv
   vim
   sudo apt install neovim
   sudo apt install vim-gtk
   vim
   imgs
   img
   vim .vimrc 
   vim
   sudo apt install
   sudo apt install  vim-python-jedi
   vim
   vim nice.c
   vim
   vim
   vim .vimrc 
   vim .vimrc 
   cd .config/
   ls
   stow
   st
   sudo apt instal slow
   sudo apt instal; stow
   sudo apt install stow
   ..s
   ss
   ..
   t stow
   sudo pipinstall ueberzug
   ueberzug 
   man ueberzug
   t ueberzug
   ueberzug --help
   nnn
   sudo apt install ranger
   ranger
   ueberzug 
   img
   ueberzug --help
   cd Pictures/
   ls
   cd screenshots/
   ls
   ueberzug vis.png 
   ueberzug --help
   ueberzug layer vis.png 
   ueberzug layer  
   ueberzug layer  vis.png
   ueberzug --help
   ueberzug layer  --loader vis.png
   vim nice.c
   vim .vimrc 
   g++ nice -o nice.c 
   g++ nice  nice.c 
   g++ nice.c nice
   g++ -o nice nice.c 
   ./nice
   rm *nice
   rm nice*
   vim .vimrc 
   vim
   sudo apt install vim-jedi
   vim nice.c
   vim nice.cpp
   mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
   cd .vim/autoload/
   ls
   vim nice.cpp
   cd ~/.vim/bundle/ && git clone --recursive https://github.com/davidhalter/jedi-vim.git
   vim nice.cpp
   git clone --recursive https://github.com/davidhalter/jedi-vim.git ~/.vim/bundle/jedi-vim
   cd .vim/bundle/
   ;s
   ls
   rm jedi-vim/
   rm -rf jedi-vim/
   vim nice.cpp
   git clone --recursive https://github.com/davidhalter/jedi-vim.git ~/.vim/bundle/jedi-vim
   vim nice.cpp
   vim nice.java
   vim
   sudo bash
   sudo apt install vim-python-jedi 
   vim
   vim nice.java
   mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
   vim nice.java
   vim nice.jav
   vim nice.java
   sensors|grep temp
   git clone --recursive https://github.com/davidhalter/jedi-vim.git ~/.vim/bundle/jedi-vim
   vim --version
   vim --version|grep +conceal
   sudo bash
   cd .vim
   ls
   cd bundle/
   l
   ss
   ls
   rm jedi-vim/
   rm -rf jedi-vim/
   ..
   ls
   cd autoload/
   ls
   ..
   cd plugged/
   ls
   rm -rf jedi-vim/
   sudo apt remove --purge vim-python-jedi 
   sudo apt install vim-python-jedi 
   dwn
   ..
   cd .vim/bundle/
   git clone https://github.com/ycm-core/YouCompleteMe
   cd YouCompleteMe/
   pythoninstall.py --clang-completer
   git submodule update --init --recursive
   ls
   ./install.py --java-completer
   ls
   vim
   vim --version|grep +conceal
   vim nice.java
   vim nice.cpp
   cd .vim/bundle/
   ls
   rm -rf YouCompleteMe/
   vim nice.cpp
   goto
   fzf .
   fzf -q .
   man fzf
   fzf --all
   fzf -a
   fzf 
   t fzf
   ps aux|fzf
   ps aux|fzf --reverse
   cd .vim
   ls
   cd bundle/
   ls
   ..
   cd plugged/
   ls
   cd jedi-vim/
   ls
   make
   sudo make
   sudo make install
   ebrc
   vim
   vim nice.cpp
   vim
   vim nice.cpp
   cd scripts/
   ls
   vim calc 
   ..
   vim nice.cpp
   vim-addons install python-jedi
   vim-addons status
   sudo apt-get install vim-python-jedi
   vim nice.cpp
   vifm
   nnn
   sudo apt install 
   sudo apt install "
       vim-nox
       vim-gtk
       vim-gnome
       vim-athena
   "
   sudo apt install vim-nox vim-gtk vim-gnome vim-athena"
   '
   "
   sudo apt install vim-nox vim-gtk vim-gnome vim-athena
   sudo apt install vim-nox vim-gtk  vim-athena
   vim nice.cpp
   cd .vim
   ls
   cd bundle/
   ls
   git clone 
   git clone https://github.com/Shougo/neocomplete.vim
   ls
   cd neocomplete.vim/
   ls
   cd plugin/
   ls
   cd neocomplete/
   ls
   ..
   l
   sls
   ls
   cd test/
   ls
   ..
   ls
   cd autoload/
   sl
   ls
   ..
   ls
   ..
   rm neocomplete.vim/
   mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
   cd ~/.vim/bundle && git clone --depth=https://github.com/vim-syntastic/syntastic.git
   ..
   vim .vimrc 
   imgs
   img
   type img
   cd scripts/
   vim img 
   fzf --preview
   fzf --preview nice
   cd Pictures/
   fzf --preview nice
   fzf --preview 
   fzf --preview .
   fzf --preview 
   man fzf|grep preview
   fzf --preview "ueberzug"
   fzf --preview "zathura"
   fzf --preview "sxiv"
   man vifm
   vifm
   img
   sxiv $(img)
   sxiv "$(img)"
   ..
   cd .vim
   ls
   cd plug
   cd plugged/
   ls
   cd space-vim-dark/
   ;s
   ls
   cat README.md 
   vim
   ls
   vim
   cd .vim
   ks
   ls
   cd plugged/
   ls
   cd space-vim-dark/
   ls
   cd colors/
   ls
   cat space-vim-dark.vim 
   ..
   ls
   cd space-vim-dark/
   ls
   pdf README.md 
   cat README.md 
   pandoc README.md -o README.pdf
   ls
   vim
   vim .vimrc 
   cd .vim
   ls
   cd plugged/
   ls
   cd space-vim-dark/
   ls
   cat README.md 
   vim .vimrc 
   vim
   logout
   loginctl terminate-user joel
   killall vim
   killall vim         
   htop
   killall calc
   htop
   ls
   cat dirsize
   sudo gparted
   ls
   htop
   vim
   g a list of windows with PID and geometry information.
   wmctrl -p -G -l
   wmctrl 
   wt mctrl 
   t wmctrl 
   rman
   sudo bash
   vim
   ls
   sxhkd 
   man sxhkd 
   ls
   ./forceeject 
   sudo ./forceeject 
   wmctrl | grep switch 
   wmctrl |grep .| grep switch 
   wmctrl | egrep switch 
   vim
   ls
   cd .foreui/
   ls
   ls color
   ls conf
   ls customize/
   ls
   g++ -o nice nice.cpp 
   ./nice 
   rm nice
   ./nice
   vim nice.cpp
   avwifi
   vvu
   lec21
   cd database/
   ls
   spdf
   ls
   lmvs
   ls
   lmvs
   lec12
   lec21
   ls
   pg
   cd java/
   ls
   cd books\ \&\ tutorials/
   ls
   cd Books/
   ls
   pdfs
   lec21
   pg
   cd java/
   ls
   cd books\ \&\ tutorials/
   ls
   cd Books/
   ls
   pdf 'java.pdf' 
   pdf 'java.pdf' &exit
   lec21
   pg
   cd java/
   l
   ls
   cd rawjava/
   ls
   javafx firstjavafx.
   javafx firstjavafx.java 
   javacfx firstjavafx.java 
   javacfx firstjavafx
   javafx firstjavafx
   lec21
   ls
   pg
   cd java/
   ls
   cd books\ \&\ tutorials/
   ls
   Books/
   ls
   ..
   ...
   cd java/
   ls
   cd rawjava/
   ls
   lt
   vim firstjavafx.java 
   ls
   lt
   javac firstjavafx.java
   javac firstjavafx.java 
   ls
   java tictactoe 
   ls
   java HangMan
   java TorF 
   java ATMsimulation 
   vim test.html
   ls
   ./nice
   lt
   ;s
   ls
   g++ -o nice nice.cpp 
   ./nice 
   g++ -o nice nice.cpp 
   ./nice 
   rhythmbox-client 
   rhythmbox-client --help
   rhythmbox-client -i
   ls
   lt
   ls
   chmods
   ls
   lt
   g++ -o nice nice.cpp 
   ./nice 
   vim nice.cpp 
   dwn
   cd Video/
   ls
   mpv 'G-Eazy_x_Bebe_Rexha_-_Me,_Myself_&_I_(Official_Music_Video)_-_YouTube.mkv' 
   mpv 'Xxxtentacion_&_Ski_Mask_The_Slump_God_Interview_-_YouTube.mkv' 
   mpv The_Xxxtentacion_Interview_-_YouTube.mkv 
   mpv XXXTentacion_Calls_Out_Drake_In_His_First_Interview_After_Jail\!_-_YouTube.mkv 
   cd .vim
   ls
   cd plug
   cd plugin/
   ls
   ..
   ls
   cd bundle/
   ls
   ...
   ls
   cd .vim
   ls
   cd plugin/
   ls
   ..
   cd ftplugin/
   ls
   ..
   cd bundle/
   ls
   ..
   ls
   cd autoload/
   ls
   ..
   l
   cd plugged/
   ls
   sl
   ls
   cd space-vim-dark/
   ls
   cd colors/
   ls
   cat space-vim-dark.vim 
   less space-vim-dark.vim 
   vvu
   hist
   vvu
   ps caxh
   cd scripts/
   ls
   cat killprocess 
   ps auxch --sort -%cpu,-%mem
   ps auxch --sort -%cpu,-%mem:less
   ps auxch --sort -%cpu,-%mem|less
   ps auxc --sort -%cpu,-%mem|less
   calc
   man rofi
   ls|rofi -dmenu -width 20
   ls|rofi -dmenu -width 30
   ls|rofi -dmenu -width 40
   cd scripts/
   ls
   vim spdf 
   vim
   vim .vimrc 
   pg
   cd java/
   cd rawjava/
   javacfx ButtonInPane.java 
   javafx ButtonInPane
   sudo apt install vim-youcompleteme 
   vim nice.cpp
   vim nice.pp
   vim
   cd .vim
   cd bundle/
   ls
   ..
   ls
   cd plugged/
   ls
   cd YCM-Generator/
   ls
   ./config_gen.py 
   vim
   cd .vim
   cd bundle/
   git submodule update --init --recursive
   git submodule update --init --recursive 
   cd YouCompleteMe/
   git submodule update --init --recursive
   vim
   logout
   ls
   cd .vim
   cd plug
   cd plugged/
   ls
   cd space-vim-dark/
   ls
   cd colors/
   ..
   less README.md 
   pandoc -o README.md nice.pdf
   pandoc README.md -o nice.pdf
   ls
   ....
   ls
   rm nice nice.cpp 
   pg
   cd java/
   ls
   cd rawjava/
   ls
   vim ButtonInPane.java
   vim
   vim ~/.vimrc 
   cd .vim/bundle/
   git clone https://github.com/ycm-core/YouCompleteMe
   rm YouCompleteMe/
   git clone https://github.com/ycm-core/YouCompleteMe
   vim
   home
   vim nice.cpp
   vim
   cd .vim/bundle/
   ls
   ..
   cd plugged/
   ls
   cd YouCompleteMe/
   ls
   ./install.sh --all
   rebootsafe
   cd .vim
   cd bundle/
   ls
   ..
   cd pl
   cd .vim
   cd plugged/
   ls
   cd YouCompleteMe/
   ls
   python install.py
   vim
   ///
   ls
   t grep
   vim nice.cpp
   rm nice.cpp 
   vim nice.java
   vim nice.cpp
   yt
   alias yt
   read 
   read -p "Enter fullname"
   read -p "Enter fullname:"
   t read
   read -p "Enter fullname:" fullname
   echo $fullnaem
   echo $fullname
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 35
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 35-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 34-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 33-
   cut -c 33- https://www.youtube.com/watch?v=fTjm59DFifg
   https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 33
   ls
   mv dir*
   mv dir* hi.java
   mv dir* ls
   mv *dir* 
   mv *dir*  nice
   ls
   mv *dir*  
   rename *dirsize* dir
   rename dirsize* dir
   man rename
   rename s/dirsize/nice/g 
   rename s/dirsize/nice/g *
   ls
   lt
   ls *nice
   cat nice
   rename s/nice/dirsize/g *
   yt https://www.youtube.com/watch?v=fTjm59DFifg
   vvu
   link=https://www.youtube.com/watch?v=fTjm59DFifg
   read -p "Enter Title of the vidðº:" title
   touch $query 
   touch "$query" 
   echo $query 
   ' query="-_$(echo $link|cut -c 33-)" 
   touch "$query" 
   lt
   ' query="\-_$(echo $link|cut -c 33-)" 
   query="\-_$(echo $link|cut -c 33-)"
   touch "$query" 
   lt
   query="-_$(echo $link|cut -c 33-)"
   touch "$query" 
   touch '$query' 
   lt
   touch "\$query" 
   lt
   query="-_$(echo $link|cut -c 33-)"
   touch "$query" 
   echo "$query" |touch
   query="-_$(echo $link|cut -c 33-)"
   touch "$query" 
   touch '"$query"' 
   lt
   query="-/_$(echo $link|cut -c 33-)"
   touch "$query"
   query="-_\$(echo $link|cut -c 33-)"
   touch "$query"
   query="-_\$(echo $link|cut -c 33-)"
   touch "$query"
   query="-\_$(echo $link|cut -c 33-)"
   touch "$query"
   query="-_$(echo $link|cut -c 33-)"
   touch "$query"
   lt
   rm '\-\_fTjm59DFifg' '\-_fTjm59DFifg' 
   rm $query 
   rm '$query' '"$query"' 
   query="-_$(echo $link|cut -c 33-)"
   echo $query 
   touch $query 
   echo $query 
   touch '-_fTjm59DFifg
   touch '-_fTjm59DFifg'
   touch "-_fTjm59DFifg"
   man touch
   touch "-_fTjm59DFifg"
   nano "-_fTjm59DFifg"
   nano '-_fTjm59DFifg'
   nano ''-_fTjm59DFifg''
   nano '-_fTjm59DFifg'
   nano -i '-_fTjm59DFifg'
   man nano
   nano -A '-_fTjm59DFifg'
   query=$(echo $query|sed s/\-//g)
   echo $query 
   ls
   lt
   rm _-fTjm59DFifg.f137.mp4.part 
   yt https://www.youtube.com/watch?v=fTjm59DFifg
   rm ls
   ls
   lt
   query="\_-$(echo $link|cut -c 33-)"
   echo $query 
   echo $title
   sed s/"$query"/"$title"/g $query
   echo $query|sed s/"$query"/"$title"/g 
   query="_-$(echo $link|cut -c 33-)"
   sed s/"$query"/"$title"/g $query
   echo $query|sed s/"$query"/"$title"/g 
   rm _-fTjm59DFifg.f137.mp4.part 
   cd scripts/
   ls
   cat emojis 
   cat calc 
   cat calc |less
   cd scripts/
   ls
   touch yt
   nano yt
   mx yt
   sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
   sudo chmod a+rx /usr/local/bin/youtube-dl
   cd Music/
   yt https://www.youtube.com/watch?v=tgI6PjEq0O8
   yt https://www.youtube.com/watch?v=oJnF5VxTO5g
   yt https://www.youtube.com/watch?v=Pw1fSRmkXfA
   lt
   ls
   thunar
   ls
   lt
   mv "I'm still waiting for you.mkv" "late night vibes... ð´.mkv" ~/Music/
   cd Music/
   ls
   yt https://www.youtube.com/watch?v=7YNBL6F4IZU
   youtube-dl https://www.youtube.com/watch?v=7YNBL6F4IZU
   yt https://www.youtube.com/watch?v=C02WOL9lLx8
   lt
   yt https://www.youtube.com/watch?v=B_v3O5UQg4I
   lt
   yt https://www.youtube.com/watch?v=A-AcwPlCt68
   https://www.youtube.com/watch?v=hTboUoM-gvY
   yt https://www.youtube.com/watch?v=hTboUoM-gvY
   yt https://www.youtube.com/watch?v=C8ZSVhpeAO0
   yt https://www.youtube.com/watch?v=sK_D3wGANhY
   lt
   yt https://www.youtube.com/watch?v=HI__cDQs5hY
   vim .vimrc
   yt https://www.youtube.com/watch?v=fTjm59DFifg
   lt
   ls
   mpv late\ night\ vibes...\ ð´.mkv 
   cd Music/
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch\?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch\?v\="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A '='
   t grep
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A '='
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A '='
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A  "watch\?v\="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A  "watch\?v\="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A  "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|egrep -A  "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "watch?v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "v="
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A "v"
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A *v*
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A *v
   echo https://www.youtube.com/watch?v=fTjm59DFifg|grep -A v
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut 6-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut n -6
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -n 5
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c -2
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 8-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 20-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 25-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 30-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 34-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 33-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 32-
   echo https://www.youtube.com/watch?v=fTjm59DFifg|cut -c 33-
   ebrc
   cd scripts/
   cat calc |less
   cd ~/Music/
   ls
   lt
   yt https://www.youtube.com/watch?v=HI__cDQs5hY
   lt
   vidtomp'Late night _ Chill Mix-HI__cDQs5hY.mkv'
   lt
   mv .mp'chill midnight mix.mp3'
   rm Late night _ Chill Mix-HI__cDQs5hY.mkv
   rm 'Late night _ Chill Mix-HI__cDQs5hY.mkv'
   lt
   cd ~/Music/
   yt https://www.youtube.com/watch?v=ISNBfryBkSo
   lt
   youtube-dl https://www.youtube.com/watch?v=tmLSOs79FXQ
   ls
   ls|grep 'i feel'
   youtube-dl https://www.youtube.com/watch?v=wxVc3-yYQ1Y
   text
   vim ~/scripts/yt 
   ~/Music/
   yt https://www.youtube.com/watch?v=wxVc3-yYQ1Y
   ebrc
   cd ~/Music/
   yt https://www.youtube.com/watch?v=wxVc3-yYQ1Y
   vim ~/scripts/yt 
   yt https://www.youtube.com/watch?v=wxVc3-yYQ1Y
   ls
   lt
   rm Kina\ -\ Nobody\ Cares\ \(ft.\ Shiloh\)-wxVc3-yYQ1Y.f398.mp4.part 
   cd ~/Music/
   ls
   yt https://www.youtube.com/watch?v=wxVc3-yYQ1Y
   lt
   sudo apt install --reinstall youtube-dl 
   cd ~/Music/
   yt https://www.youtube.com/watch?v=bp43UxaCBf0
   yt https://www.youtube.com/watch?v=CN_NPmKjWDM
   mphone
   vvu
   cd /usr/local/
   cd bin/
   ls
   cat youtube-dl 
   rm youtube-dl 
   sudo youtube-dl 
   sudo rm youtube-dl 
   ls
   vim ~/scripts/yt 
   cd Music/
   ls
   cd ~/Music/
   ls
   rm 'ï¼³ï½ï½ï½ï½ï½ ï¼¤ï½ï½ï½ï½ï½ï½ ï¼£ï½ï½ï½ï½ ï¼­ï½ï½-CN_NPmKjWDM.f247.webm.part' 
   yt https://www.youtube.com/watch?v=CN_NPmKjWDM
   sudo apt remove youtube-dl && sudo apt remove --purge youtube-dl 
  sudo apt install youtube-dl 
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  sudo apt install --reinstall youtube-dl 
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
  sudo chmod a+rx /usr/local/bin/youtube-dl
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  ls
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  ls
  rm 'ï¼³ï½ï½ï½ï½ï½ ï¼¤ï½ï½ï½ï½ï½ï½ ï¼£ï½ï½ï½ï½ ï¼­ï½ï½-CN_NPmKjWDM.f247.webm.part'
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  vvu
  mphone
  cd ~/phone/
  ls
  cat .profig.os 
  cat .turing.dat 
  ls
  ..
  uphone
  vim
  cd scripts/
  ls
  cat pdf
  ls
  cat rman
  cd scripts/
  hist
  ls
  cat rman 
  cd Music/
  ls
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  cd scripts/
  ls
  cat  rman 
  cat img
  nmcli
  nmcli |grep -w connected
  nmcli
  nmcli |grep -w disconnected
  help if
  if [!$(nmcli |grep -w connected) -eq 0]; then echo "yes" else echo "no"; fi  
  if [!$(nmcli |grep -w connected) -eq 0]; then echo "yes"; else echo "no"; fi  
  if '[!$(nmcli |grep -w connected) -eq 0]'; then echo "yes"; else echo "no"; fi  
  if fi(nmcli |grep -w connected) -eq 0; then echo "yes"; else echo "no"; fi  
  if [!$(nmcli |grep -w connected) -eq 0]; then echo "yes"; else echo "no"; fi  
  if [! $(nmcli |grep -w connected) -eq 0]; then echo "yes"; else echo "no"; fi  
  if [$(nmcli |grep -w connected) -eq 0]; then echo "yes"; else echo "no"; fi  
  if [ $(nmcli |grep -w connected) -eq ]; then echo "yes"; else echo "no"; fi  
  nice=$(nmcli|grep -w connected)
  if [ $nice -eq ]; then echo "yes"; else echo "no"; fi  
  help if
  if  $nice -eq ; then echo "yes"; else echo "no"; fi  
  cat $nice
  nmcli|grep -o -w connected
  if [ $(nmcli |grep -w -o connected) -eq ]; then echo "yes"; else echo "no"; fi  
  if [ $(nmcli |grep -w -o connected) == "" ]; then echo "yes"; else echo "no"; fi  
  if [ $(nmcli |grep -w -o connected) == "connected" ]; then echo "yes"; else echo "no"; fi  
  cd scripts/
  vim
  vim wifidisconnect 
  man sleep
  sleep 1-
  sleep 10
  cd scripts/
  ls
  vim wifidisconnect 
  cd scripts/
  cat img
  cat rman 
  vim
  cd scripts/
  ls
  vim wifidisconnect 
  nmcli|grep -w -o connected
  wifi off && notify-send -t 'disconnected...!ï¸ï¸ð'
  cd /usr/bin/
  ls env
  if [ $(nmcli|grep -o -w connected) == "connected" ];        then;    notify-send -t 'back on ðª!' ;    else ;         notify-send -t 'wifi could not connect...ð¿';         fi '
  q
  if [ $(nmcli|grep -o -w connected) == "connected" ];       then;    notify-send -t 'back on ðª!' ;    else ;          notify-send -t 'wifi could not connect...ð¿';          fi '
  if [ $(nmcli|grep -o -w connected) == "connected" ];       then;    notify-send -t 'back on ðª!' ;    else ;          notify-send -t 'wifi could not connect...ð¿';          fi 
  if [ $(nmcli|grep -o -w connected) == "connected"]; then echo "yes"; else echo "no"; fi
  if [ $(nmcli|grep -o -w connected) == "connected" ]; then echo "yes"; else echo "no"; fi
  cd scripts/
  ls
  vim wifidisconnect 
  ./wifidisconnect 
  "hi"=="hi"
  ["hi"=="hi"]
  test [ "hi"=="hi" ]
  test [ "hi" == "hi" ]
  test [ "hi"=="hi" ]
  test [ "hi" == "hi" ]
  test [[ "hi" == "hi" ]]
  test [["hi" == "hi"]]
  test ["hi" == "hi"]
  test
  mam test
  man test
  cd scru
  cd scripts/
  ls
  vim wifidisconnect 
  regex
  cd scripts/
  ls
  sed /'#!\/bin\/bash'/'#!\/usr/\bin/\env bash'/g *
  sed s/'#!\/bin\/bash'/'#!\/usr/\bin/\env bash'/g *
  sed 's/"#!\/bin\/bash"/"#!\/usr/\bin/\env bash"/g *
  sed 's/"#!\/bin\/bash"/"#!\/"usr/\bin/\env bash"/g *
  sed 's/"#!\/bin\/bash"/"#!\/"usr/\bin/\env bash"/g' *
  sed 's/"#!\/bin\/bash"/"#!\/usr/\bin/\env bash"/g' *
  sed 's/"#!\/bin\/bash"/"#!/\usr/\bin/\env bash"/g' *
  sed 's/"#!\/bin\/bash"/"#!\/usr\/bin\/env bash"/g' *
  sed 's/"#\!\\/bin\/bash"/"#!\/usr\/bin\/env bash"/g' *
  sed 's/"\#!\/bin\/bash"/"#!\/usr\/bin\/env bash"/g' *
  sed 's/"#\!\/bin\/bash"/"#!\/usr\/bin\/env bash"/g' *
  sed 's/"\#\!\/bin\/bash"/"#!\/usr\/bin\/env bash"/g' *
  sed 's/"#!\/bin\/bash"/"#!\/usr\/bin\/env bash"/g' *
  sed 's/"\/bin\/bash"/"\/usr\/bin\/env bash"/g' *
  sed 's/"\/bin\/bash"/"\/usr\/bin\/env\ bash"/g' *
  sed 's/"\/bin\/bash"/"\/usr/bin/env bash"/g' *
  sed 's/"\/bin\/bash"/"\/usr\/bin\/env bash"/g' *
  sed 's/\/bin\/bash/"\/usr\/bin\/env bash"/g' *
  sed 's/\/bin\/bash/\/usr\/bin\/env bash/g' *
  sed -i 's/\/bin\/bash/\/usr\/bin\/env bash/g' *
  cat *
  touch test
  mx test 
  vim te
  vim test 
  ./test 
  vim test 
  ./test 
  strace ./test
  clear
  ~/Music/
  yt https://www.youtube.com/watch?v=CN_NPmKjWDM
  lt
  vidtomp*.webm
  ;s
  ls
  lt
  vidtomp*.mkv
  lt
  mv 'I'\''m still waiting for you.mkv.mp3' I\'m\ still\ waiting\ for\ you.mp3
  ls
  lt
  mv 'i will be waiting ~ lofi hiphop mix feat. shiloh-ISNBfryBkSo.webm' 'i will be waiting ~ lofi hiphop mix feat. shiloh.mp3'
  type vidtomp
  ls
  vidtomp'ï¼³ï½ï½ï½ï½ï½ ï¼¤ï½ï½ï½ï½ï½ï½ ï¼£ï½ï½ï½ï½ ï¼­ï½ï½.webm' 
  vidtomp'ï¼³ï½ï½ï½ï½ï½ ï¼¤ï½ï½ï½ï½ï½ï½ ï¼£ï½ï½ï½ï½ ï¼­ï½ï½.webm' 'ï¼³ï½ï½ï½ï½ï½ ï¼¤ï½ï½ï½ï½ï½ï½ ï¼£ï½ï½ï½ï½ ï¼­ï½ï½'
  ls
  lt
  rm 'ï¼³ï½ï½ï½ï½ï½ ï¼¤ï½ï½ï½ï½ï½ï½ ï¼£ï½ï½ï½ï½ ï¼­ï½ï½.webm' 
  vidtomp'ï¼¨ï¼¥ï¼¡ï¼²ï¼´ï¼¢ï¼²ï¼¯ï¼«ï¼¥ï¼®.mkv' 'ï¼¨ï¼¥ï¼¡ï¼²ï¼´ï¼¢ï¼²ï¼¯ï¼«ï¼¥ï¼®'
  lt
  rm 'ï¼¨ï¼¥ï¼¡ï¼²ï¼´ï¼¢ï¼²ï¼¯ï¼«ï¼¥ï¼®.mkv' 
  lt
  ls *.webm
  vidtomp"i'm tired of feeling this way.webm" "i'm tired of feeling this way" 
  lt
  ls *.webm
  vidtompkina\ -\ i\ feel\ empty-tmLSOs79FXQ.webm kina\ -\ i\ feel\ empty
  ls *.webm
  vidtompï½ï½ï½ï½ï½.webm  ï½ï½ï½ï½ï½
  lt
  ls
  lt
  rm *.webm
  env
  ls
  htop
  vim
  cd Music/
  lt
  rm 'i will be waiting ~ lofi hiphop mix feat. shiloh-ISNBfryBkSo.webm.mp3'
  ls
  cd www/
  ls
  /usr/bin/env bash ls
  /usr/bin/env bash 'ls'
  /usr/bin/env bash "ls"
  /usr/bin/env "ls"
  tg
  ls
  ~/Music/
  vidtomplate\ night\ vibes...\ ð´.mkv late\ night\ vibes...\ ð´
  mpv late\ night\ vibes...\ ð´.mkv 
  rm late\ night\ vibes...\ ð´.mkv 
  sudp apt search scrcpy 
  sudo apt search scrcpy 
  dwn
  cd minimal/
  ls
  home
  git clone https://github.com/Genymobile/scrcpy
  cd scrcpy/
  ls
  /
  pipinstall meson
  man ninja
  man sp
  t sp
  man printf
  while :
  while
  i=1
  sp="/-\|"
  echo -n ' '
  while true; do     printf "\b${sp:i++%${#sp}:1}"; done
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n'
  ls test
  echo 'echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n' 
  end > test
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n' 
  end 
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n' 
  end
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n' 
  end
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n' end
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n'
  end
  echo << end
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n'
  end
  echo << >>
  echo << end > test
  echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n'
  end
  cat test 
  echo echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo << end > test
  'echo -ne '#####                     (33%)\r'
  sleep 1
  echo -ne '#############             (66%)\r'
  sleep 1
  echo -ne '#######################   (100%)\r'
  echo -ne '\n''
  end
  cat test
  vim test 
  ./test 
  echo -ne
  echo -ne ls
  echo -ne ls; echo -ne ls
  man echo
  echo -ne ls; echo -ne ls
  echo -ne ##(10);sleep 1; echo -ne #####(20)
  echo -ne '##(10)';sleep 1; echo -ne '#####(20)'
  man echo
  ls
  cd scripts/
  ls
  vim youtube 
  vim wifidisconnect 
  cd android-studio/
  ls
  cd li
  cd lib/
  ls
  ....
  bd
  ..
  ls
  cd bin/
  ls
  ..
  cd jre/
  ;s
  ls
  cd /lib
  ls
  ..
  ls
  cd /usr/lib
  ls
  cd jvm/
  ls
  cd java-11-openjdk-amd64/
  ls
  cd lib/
  ls
  cd .android/
  ls
  fzf
  goto android sdk
  ..
  ls
  ~/Android/sdk 
  $ANDROID_SDK_ROOT/
  man nc
  hile :;do for s in / - \\ \|; do printf "\r$s";sleep .1;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .1;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep 1;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .01;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .09;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .10;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .1000;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .1;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .09;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .02;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .5;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .4;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .2;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .06;done;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .06;done
  while :;do for s in / - \\ \|; do printf "\r$s";sleep .06;done;done
  apt seach pmonitor
  apt search pmonitor
  pv
  apt search pv
  sudo apt install pv
  pv
  pv ls
  man pv
  nc
  s
  clear
  ' cat file | pv -s | nc -w somewhere.com 3000
  cat test | pv -s | nc -w somewhere.com 3000
  cat test | pv -s | nc -w google.com 3000
  sudo apt install gcc git pkg-config meson ninja-build                  libavcodec-dev libavformat-dev libavutil-dev                  libsdl2-dev
  dwn
  ..
  cd scr
  cd scrcpy/
  ls
  sudo ninja install
  make
  ninja
  ./run 
  ls
  ./run --help
  ./run -help
  ./run 
  ./run x
  meson x --buildtype release --strip -Db_lto=true
  cd x
  ninja
  ebrc
  ninja
  cd scrcpy/
  cd x/
  ninja
  file __fzf_history__ 
  realpath __fzf_history__ 
  echo $__fzf_history__ 
  cat $__fzf_history__ 
  goto __fzf_history__
  ..
  goto __fzf_history__
  cd 
  goto fzf
  hist
